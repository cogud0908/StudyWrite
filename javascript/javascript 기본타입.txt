<script>
var number = 5;
var number2 = new Number(5);

console.log(number + ":" + typeof number); // number(내장 객체)
console.log(number2 + ":" + typeof number2); // object
console.log(number+number2); // 10

// 내장타입 객체(number, boolean, string, function)는 확장이 되지 않는다.
number.myVal = 20;
console.log(number.myVal); // undefined

// object 객체는 확장이 가능하다.
number2.myVal = 20;
console.log(number2.myVal); // 20

var pi = 3.14;
console.log(pi + ":" + typeof pi); 

var str = "hello world";
var str2 = new String("Hello world");
console.log(str + ":" + typeof str); // string
console.log(str2 + ":" + typeof str2); // string

var b = false;
var c = new Boolean(false);
console.log(b + ":" + typeof b); // boolean
console.log(c + ":" + typeof c); // boolean

var f = function(){}
console.log(f() + ":" + typeof f); // undefined

var f2 = new Function("x", "y", "return x + y");
console.log(f2(50, 50) + ":" + typeof f2);

var a = [];
var a2 = new Array();
console.log(a+":"+typeof a); // object
console.log(a2+":"+typeof a2); // object

var o = {};
var o2 = new Object();
console.log(o+":"+typeof o); // object
console.log(o2+":"+typeof o2); // object

// console 브라우저 내장 객체
console.log("로그입니다.");
console.warn("경고입니다.");
console.error("에러입니다.");

var MyClass = function(no, name)
{
	this.no = no;
	ths.name = name;
}
</script>